// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from '@pulumi/pulumi'
import * as utilities from '../../utilities'

// Export members:
export { BFDProfileArgs } from './bfdprofile'
export type BFDProfile = import('./bfdprofile').BFDProfile
export const BFDProfile: typeof import('./bfdprofile').BFDProfile = null as any
utilities.lazyLoad(exports, ['BFDProfile'], () => require('./bfdprofile'))

export { BFDProfileListArgs } from './bfdprofileList'
export type BFDProfileList = import('./bfdprofileList').BFDProfileList
export const BFDProfileList: typeof import('./bfdprofileList').BFDProfileList =
    null as any
utilities.lazyLoad(exports, ['BFDProfileList'], () =>
    require('./bfdprofileList'),
)

export { BFDProfilePatchArgs } from './bfdprofilePatch'
export type BFDProfilePatch = import('./bfdprofilePatch').BFDProfilePatch
export const BFDProfilePatch: typeof import('./bfdprofilePatch').BFDProfilePatch =
    null as any
utilities.lazyLoad(exports, ['BFDProfilePatch'], () =>
    require('./bfdprofilePatch'),
)

export { BGPAdvertisementArgs } from './bgpadvertisement'
export type BGPAdvertisement = import('./bgpadvertisement').BGPAdvertisement
export const BGPAdvertisement: typeof import('./bgpadvertisement').BGPAdvertisement =
    null as any
utilities.lazyLoad(exports, ['BGPAdvertisement'], () =>
    require('./bgpadvertisement'),
)

export { BGPAdvertisementListArgs } from './bgpadvertisementList'
export type BGPAdvertisementList =
    import('./bgpadvertisementList').BGPAdvertisementList
export const BGPAdvertisementList: typeof import('./bgpadvertisementList').BGPAdvertisementList =
    null as any
utilities.lazyLoad(exports, ['BGPAdvertisementList'], () =>
    require('./bgpadvertisementList'),
)

export { BGPAdvertisementPatchArgs } from './bgpadvertisementPatch'
export type BGPAdvertisementPatch =
    import('./bgpadvertisementPatch').BGPAdvertisementPatch
export const BGPAdvertisementPatch: typeof import('./bgpadvertisementPatch').BGPAdvertisementPatch =
    null as any
utilities.lazyLoad(exports, ['BGPAdvertisementPatch'], () =>
    require('./bgpadvertisementPatch'),
)

export { BGPPeerArgs } from './bgppeer'
export type BGPPeer = import('./bgppeer').BGPPeer
export const BGPPeer: typeof import('./bgppeer').BGPPeer = null as any
utilities.lazyLoad(exports, ['BGPPeer'], () => require('./bgppeer'))

export { BGPPeerListArgs } from './bgppeerList'
export type BGPPeerList = import('./bgppeerList').BGPPeerList
export const BGPPeerList: typeof import('./bgppeerList').BGPPeerList =
    null as any
utilities.lazyLoad(exports, ['BGPPeerList'], () => require('./bgppeerList'))

export { BGPPeerPatchArgs } from './bgppeerPatch'
export type BGPPeerPatch = import('./bgppeerPatch').BGPPeerPatch
export const BGPPeerPatch: typeof import('./bgppeerPatch').BGPPeerPatch =
    null as any
utilities.lazyLoad(exports, ['BGPPeerPatch'], () => require('./bgppeerPatch'))

export { CommunityArgs } from './community'
export type Community = import('./community').Community
export const Community: typeof import('./community').Community = null as any
utilities.lazyLoad(exports, ['Community'], () => require('./community'))

export { CommunityListArgs } from './communityList'
export type CommunityList = import('./communityList').CommunityList
export const CommunityList: typeof import('./communityList').CommunityList =
    null as any
utilities.lazyLoad(exports, ['CommunityList'], () => require('./communityList'))

export { CommunityPatchArgs } from './communityPatch'
export type CommunityPatch = import('./communityPatch').CommunityPatch
export const CommunityPatch: typeof import('./communityPatch').CommunityPatch =
    null as any
utilities.lazyLoad(exports, ['CommunityPatch'], () =>
    require('./communityPatch'),
)

export { IPAddressPoolArgs } from './ipaddressPool'
export type IPAddressPool = import('./ipaddressPool').IPAddressPool
export const IPAddressPool: typeof import('./ipaddressPool').IPAddressPool =
    null as any
utilities.lazyLoad(exports, ['IPAddressPool'], () => require('./ipaddressPool'))

export { IPAddressPoolListArgs } from './ipaddressPoolList'
export type IPAddressPoolList = import('./ipaddressPoolList').IPAddressPoolList
export const IPAddressPoolList: typeof import('./ipaddressPoolList').IPAddressPoolList =
    null as any
utilities.lazyLoad(exports, ['IPAddressPoolList'], () =>
    require('./ipaddressPoolList'),
)

export { IPAddressPoolPatchArgs } from './ipaddressPoolPatch'
export type IPAddressPoolPatch =
    import('./ipaddressPoolPatch').IPAddressPoolPatch
export const IPAddressPoolPatch: typeof import('./ipaddressPoolPatch').IPAddressPoolPatch =
    null as any
utilities.lazyLoad(exports, ['IPAddressPoolPatch'], () =>
    require('./ipaddressPoolPatch'),
)

export { L2AdvertisementArgs } from './l2advertisement'
export type L2Advertisement = import('./l2advertisement').L2Advertisement
export const L2Advertisement: typeof import('./l2advertisement').L2Advertisement =
    null as any
utilities.lazyLoad(exports, ['L2Advertisement'], () =>
    require('./l2advertisement'),
)

export { L2AdvertisementListArgs } from './l2advertisementList'
export type L2AdvertisementList =
    import('./l2advertisementList').L2AdvertisementList
export const L2AdvertisementList: typeof import('./l2advertisementList').L2AdvertisementList =
    null as any
utilities.lazyLoad(exports, ['L2AdvertisementList'], () =>
    require('./l2advertisementList'),
)

export { L2AdvertisementPatchArgs } from './l2advertisementPatch'
export type L2AdvertisementPatch =
    import('./l2advertisementPatch').L2AdvertisementPatch
export const L2AdvertisementPatch: typeof import('./l2advertisementPatch').L2AdvertisementPatch =
    null as any
utilities.lazyLoad(exports, ['L2AdvertisementPatch'], () =>
    require('./l2advertisementPatch'),
)

export { ServiceL2StatusArgs } from './serviceL2Status'
export type ServiceL2Status = import('./serviceL2Status').ServiceL2Status
export const ServiceL2Status: typeof import('./serviceL2Status').ServiceL2Status =
    null as any
utilities.lazyLoad(exports, ['ServiceL2Status'], () =>
    require('./serviceL2Status'),
)

export { ServiceL2StatusListArgs } from './serviceL2StatusList'
export type ServiceL2StatusList =
    import('./serviceL2StatusList').ServiceL2StatusList
export const ServiceL2StatusList: typeof import('./serviceL2StatusList').ServiceL2StatusList =
    null as any
utilities.lazyLoad(exports, ['ServiceL2StatusList'], () =>
    require('./serviceL2StatusList'),
)

export { ServiceL2StatusPatchArgs } from './serviceL2StatusPatch'
export type ServiceL2StatusPatch =
    import('./serviceL2StatusPatch').ServiceL2StatusPatch
export const ServiceL2StatusPatch: typeof import('./serviceL2StatusPatch').ServiceL2StatusPatch =
    null as any
utilities.lazyLoad(exports, ['ServiceL2StatusPatch'], () =>
    require('./serviceL2StatusPatch'),
)

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case 'kubernetes:metallb.io/v1beta1:BFDProfile':
                return new BFDProfile(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:BFDProfileList':
                return new BFDProfileList(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:BFDProfilePatch':
                return new BFDProfilePatch(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:BGPAdvertisement':
                return new BGPAdvertisement(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:BGPAdvertisementList':
                return new BGPAdvertisementList(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:BGPAdvertisementPatch':
                return new BGPAdvertisementPatch(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:BGPPeer':
                return new BGPPeer(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:BGPPeerList':
                return new BGPPeerList(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:BGPPeerPatch':
                return new BGPPeerPatch(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:Community':
                return new Community(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:CommunityList':
                return new CommunityList(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:CommunityPatch':
                return new CommunityPatch(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:IPAddressPool':
                return new IPAddressPool(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:IPAddressPoolList':
                return new IPAddressPoolList(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:IPAddressPoolPatch':
                return new IPAddressPoolPatch(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:L2Advertisement':
                return new L2Advertisement(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:L2AdvertisementList':
                return new L2AdvertisementList(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:L2AdvertisementPatch':
                return new L2AdvertisementPatch(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:ServiceL2Status':
                return new ServiceL2Status(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:ServiceL2StatusList':
                return new ServiceL2StatusList(name, <any>undefined, { urn })
            case 'kubernetes:metallb.io/v1beta1:ServiceL2StatusPatch':
                return new ServiceL2StatusPatch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`)
        }
    },
}
pulumi.runtime.registerResourceModule('crds', 'metallb.io/v1beta1', _module)
