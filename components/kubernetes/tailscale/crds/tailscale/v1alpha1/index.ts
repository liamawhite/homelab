// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from '@pulumi/pulumi'
import * as utilities from '../../utilities'

// Export members:
export { ConnectorArgs } from './connector'
export type Connector = import('./connector').Connector
export const Connector: typeof import('./connector').Connector = null as any
utilities.lazyLoad(exports, ['Connector'], () => require('./connector'))

export { DNSConfigArgs } from './dnsconfig'
export type DNSConfig = import('./dnsconfig').DNSConfig
export const DNSConfig: typeof import('./dnsconfig').DNSConfig = null as any
utilities.lazyLoad(exports, ['DNSConfig'], () => require('./dnsconfig'))

export { ProxyClassArgs } from './proxyClass'
export type ProxyClass = import('./proxyClass').ProxyClass
export const ProxyClass: typeof import('./proxyClass').ProxyClass = null as any
utilities.lazyLoad(exports, ['ProxyClass'], () => require('./proxyClass'))

export { ProxyGroupArgs } from './proxyGroup'
export type ProxyGroup = import('./proxyGroup').ProxyGroup
export const ProxyGroup: typeof import('./proxyGroup').ProxyGroup = null as any
utilities.lazyLoad(exports, ['ProxyGroup'], () => require('./proxyGroup'))

export { RecorderArgs } from './recorder'
export type Recorder = import('./recorder').Recorder
export const Recorder: typeof import('./recorder').Recorder = null as any
utilities.lazyLoad(exports, ['Recorder'], () => require('./recorder'))

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case 'kubernetes:tailscale.com/v1alpha1:Connector':
                return new Connector(name, <any>undefined, { urn })
            case 'kubernetes:tailscale.com/v1alpha1:DNSConfig':
                return new DNSConfig(name, <any>undefined, { urn })
            case 'kubernetes:tailscale.com/v1alpha1:ProxyClass':
                return new ProxyClass(name, <any>undefined, { urn })
            case 'kubernetes:tailscale.com/v1alpha1:ProxyGroup':
                return new ProxyGroup(name, <any>undefined, { urn })
            case 'kubernetes:tailscale.com/v1alpha1:Recorder':
                return new Recorder(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`)
        }
    },
}
pulumi.runtime.registerResourceModule('crds', 'tailscale.com/v1alpha1', _module)
