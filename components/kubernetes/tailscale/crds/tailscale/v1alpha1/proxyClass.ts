// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from '@pulumi/pulumi'
import * as inputs from '../../types/input'
import * as outputs from '../../types/output'
import * as utilities from '../../utilities'

import { ObjectMeta } from '../../meta/v1'

/**
 * ProxyClass describes a set of configuration parameters that can be applied to
 * proxy resources created by the Tailscale Kubernetes operator.
 * To apply a given ProxyClass to resources created for a tailscale Ingress or
 * Service, use tailscale.com/proxy-class=<proxyclass-name> label. To apply a
 * given ProxyClass to resources created for a Connector, use
 * connector.spec.proxyClass field.
 * ProxyClass is a cluster scoped resource.
 * More info:
 * https://tailscale.com/kb/1445/kubernetes-operator-customization#cluster-resource-customization-using-proxyclass-custom-resource
 */
export class ProxyClass extends pulumi.CustomResource {
    /**
     * Get an existing ProxyClass resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(
        name: string,
        id: pulumi.Input<pulumi.ID>,
        opts?: pulumi.CustomResourceOptions,
    ): ProxyClass {
        return new ProxyClass(name, undefined as any, { ...opts, id: id })
    }

    /** @internal */
    public static readonly __pulumiType = 'kubernetes:tailscale.com/v1alpha1:ProxyClass'

    /**
     * Returns true if the given object is an instance of ProxyClass.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProxyClass {
        if (obj === undefined || obj === null) {
            return false
        }
        return obj['__pulumiType'] === ProxyClass.__pulumiType
    }

    public readonly apiVersion!: pulumi.Output<'tailscale.com/v1alpha1' | undefined>
    public readonly kind!: pulumi.Output<'ProxyClass' | undefined>
    public readonly metadata!: pulumi.Output<ObjectMeta | undefined>
    /**
     * Specification of the desired state of the ProxyClass resource.
     * https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     */
    public readonly spec!: pulumi.Output<outputs.tailscale.v1alpha1.ProxyClassSpec>
    /**
     * Status of the ProxyClass. This is set and managed automatically.
     * https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     */
    public readonly status!: pulumi.Output<outputs.tailscale.v1alpha1.ProxyClassStatus | undefined>

    /**
     * Create a ProxyClass resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProxyClassArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {}
        opts = opts || {}
        if (!opts.id) {
            resourceInputs['apiVersion'] = 'tailscale.com/v1alpha1'
            resourceInputs['kind'] = 'ProxyClass'
            resourceInputs['metadata'] = args ? args.metadata : undefined
            resourceInputs['spec'] = args ? args.spec : undefined
            resourceInputs['status'] = args ? args.status : undefined
        } else {
            resourceInputs['apiVersion'] = undefined /*out*/
            resourceInputs['kind'] = undefined /*out*/
            resourceInputs['metadata'] = undefined /*out*/
            resourceInputs['spec'] = undefined /*out*/
            resourceInputs['status'] = undefined /*out*/
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts)
        super(ProxyClass.__pulumiType, name, resourceInputs, opts)
    }
}

/**
 * The set of arguments for constructing a ProxyClass resource.
 */
export interface ProxyClassArgs {
    apiVersion?: pulumi.Input<'tailscale.com/v1alpha1'>
    kind?: pulumi.Input<'ProxyClass'>
    metadata?: pulumi.Input<ObjectMeta>
    /**
     * Specification of the desired state of the ProxyClass resource.
     * https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     */
    spec?: pulumi.Input<inputs.tailscale.v1alpha1.ProxyClassSpecArgs>
    /**
     * Status of the ProxyClass. This is set and managed automatically.
     * https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     */
    status?: pulumi.Input<inputs.tailscale.v1alpha1.ProxyClassStatusArgs>
}
